// <auto-generated />
using System;
using CreditAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CreditAPI.Migrations
{
    [DbContext(typeof(CreditDbContext))]
    partial class CreditDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CreditAPI.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ApplicantId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ApplicationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ApplicationNum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BranchBank")
                        .HasColumnType("text");

                    b.Property<string>("BranchBankAddr")
                        .HasColumnType("text");

                    b.Property<int?>("CreditManagerId")
                        .HasColumnType("integer");

                    b.Property<int>("RequestedCreditId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ScoringDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("ScoringStatus")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("RequestedCreditId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("CreditAPI.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AddressBirth")
                        .HasColumnType("text");

                    b.Property<string>("AddressCurrent")
                        .HasColumnType("text");

                    b.Property<string>("CityBirth")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("INN")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("PassportNum")
                        .HasColumnType("text");

                    b.Property<string>("SNILS")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("CreditAPI.Models.RequestedCredit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal?>("AnnualSalary")
                        .HasColumnType("numeric");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<int?>("CreditType")
                        .HasColumnType("integer");

                    b.Property<decimal?>("MonthlySalary")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RequestAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("RequestCurrency")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RequestedCredits");
                });

            modelBuilder.Entity("CreditAPI.Models.Application", b =>
                {
                    b.HasOne("CreditAPI.Models.Person", "Applicant")
                        .WithMany("Applications")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CreditAPI.Models.RequestedCredit", "RequestedCredit")
                        .WithMany("Applications")
                        .HasForeignKey("RequestedCreditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("RequestedCredit");
                });

            modelBuilder.Entity("CreditAPI.Models.Person", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("CreditAPI.Models.RequestedCredit", b =>
                {
                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
